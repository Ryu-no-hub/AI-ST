//====================================================================
//      ST AiScript: Arbiter for Flagship huntint
//====================================================================
include<[_inc_path]\AiScript.dfn>;
include<[_inc_path]\AiScript.mcr>;

#if(_env_var1==0)
 _full_name = "The Flagship Hunt";
#endif

OpenArbiter(_full_name, 0x00000004);
 
  // Events 
 OpenEvents();
  // Const
  s_win    = 14;
  s_defeat = 15;
  // Init
  Event(TRUE) 
  { // Start set
    //ActCreateStartSet(PLAYER_ALL,AIREL_MYSELF, LEVEL_DEFINED);
    _ploop_begin
      if(GetPlCiv(_pl_)==CIV_WS)     //--WS--
      { ActCreatePlObj(_plmyself, TOBJ_WS_FLAGSHIP); 
        ActCreatePlObj(_plmyself, TOBJ_CONSTRUCTOR); 
        if(GetStartSetLevel()>LEVEL_LOW)        
        { ActCreatePlObj(_plmyself, TOBJ_SENTINEL); 
          ActCreatePlObj(_plmyself, TOBJ_SENTINEL); 
          ActCreatePlObj(_plmyself, TOBJ_HUNTER); 
        }
        if(GetStartSetLevel()>LEVEL_MEDIUM)  
        { ActCreatePlObj(_plmyself, TOBJ_CRUISER); 
          ActCreatePlObj(_plmyself, TOBJ_MARAUDER); 
        }
      }
      else
      { if(GetPlCiv(_pl_)==CIV_BO)   //--BO--
        { ActCreatePlObj(_plmyself, TOBJ_BO_FLAGSHIP); 
          ActCreatePlObj(_plmyself, TOBJ_ASSEMBLER); 
          if(GetStartSetLevel()>LEVEL_LOW)        
          { ActCreatePlObj(_plmyself, TOBJ_FIGHTER); 
            ActCreatePlObj(_plmyself, TOBJ_FIGHTER); 
            ActCreatePlObj(_plmyself, TOBJ_DESTROYER); 
          }
          if(GetStartSetLevel()>LEVEL_MEDIUM)  
          { ActCreatePlObj(_plmyself, TOBJ_HEAVY_CRUISER); 
            ActCreatePlObj(_plmyself, TOBJ_RAIDER); 
          }
        }
        else                         //--SI--
        { ActCreatePlObj(_plmyself, TOBJ_SI_FLAGSHIP); 
          ActCreatePlObj(_plmyself, TOBJ_CAPSULE_PROTOTYPE); 
          ActCreatePlObj(_plmyself, TOBJ_CAPSULE_PROTOTYPE); 
          ActCreatePlObj(_plmyself, TOBJ_CAPSULE_PROTOTYPE); 
          if(GetStartSetLevel()>LEVEL_LOW)        
          { ActCreatePlObj(_plmyself, TOBJ_SHS_SUB); 
            ActCreatePlObj(_plmyself, TOBJ_SHS_SUB); 
            ActCreatePlObj(_plmyself, TOBJ_SHS_SUB); 
          }
          if(GetStartSetLevel()>LEVEL_MEDIUM)  
          { ActCreatePlObj(_plmyself, TOBJ_ESCORT); 
            ActCreatePlObj(_plmyself, TOBJ_USURPER); 
          }
        }
      }
    _ploop_end
    // Off
    actOffEvent(10);actOffEvent(20);actOffEvent(30); actOffEvent(100);
  }
  // On
  Event(getOwnTime()>10)
  { actOnEvent(IsTeamGame() ? 20 : 10);
    actOnEvent(30);
    actOnEvent(100);
  }

  // Player has lost the Flagship
  Event(getOwnTime()%3==1, 10)
  { _ploop_begin
     if(!getVar(100+_pl_) && GetPlObjM(_plmyself, AITRG_BOATINTELLIGENCE)==0)
     { actSetVar(100+_pl_, ENDMISS_FAILED);ActOnTimer(_plmyself,10);ActOffFOW(_plmyself);                                 
       _actStringMess(_strf(GetStrRes(s_defeat), GetPlName(_pl_)));
       ActDelPlObjEx(_plmyself, AITRG_ALL, TOBJ_UNDEFINED, LOGO_UNDEF, "", 0,0,0,-1,-1,-1, VEFF_EXPLOSION);
     }
    _ploop_end
    actLockEvent();
  }
  // Player's team has lost their Flagships
  Event(getOwnTime()%3==1, 20)
  { _ploop_begin
     if(!getVar(100+_pl_) && GetPlObjM(_plunion, AITRG_BOATINTELLIGENCE)==0)
     { actSetVar(100+_pl_, ENDMISS_FAILED);ActOnTimer(_plmyself,10);ActOffFOW(_plmyself);                                 
       _actStringMess(_strf(GetStrRes(s_defeat), GetPlName(_pl_)));
       ActDelPlObjEx(_plmyself, AITRG_ALL, TOBJ_UNDEFINED, LOGO_UNDEF, "", 0,0,0,-1,-1,-1, VEFF_EXPLOSION);
     }
    _ploop_end
    actLockEvent();
  }
  // Player's enemies Flagships have been killed
  Event(getOwnTime()%3==1, 30)
  { _ploop_begin
     if(!getVar(100+_pl_) && GetPlObjM(_plnotally, AITRG_BOATINTELLIGENCE)==0)
     { actSetVar(100+_pl_, ENDMISS_ACCOMPL);ActOnTimer(_plmyself,10);ActOffFOW(_plmyself);                                 
       _actStringMess(_strf(GetStrRes(s_win), GetPlName(_pl_)));
     }
    _ploop_end
    actLockEvent();
  }
  // The final phase 
  Event(TRUE, 100)
  { _ploop_begin
     if(getVar(100+_pl_)>0 && GetTimerTime(_pl_)==0)
     { ActOffTimer(_plmyself); ActTotalStatistics(_plmyself, 10);ActEndMiss(_plmyself, getVar(100+_pl_));actSetVar(100+_pl_, -1);
     }
    _ploop_end
    actLockEvent();
  }

////////////// Debug //////////////////

EventInput(_PI0==7){ActDelPlObjEx(PLAYER_0, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==0){ActDelPlObjEx(PLAYER_1, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==1){ActDelPlObjEx(PLAYER_2, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==2){ActDelPlObjEx(PLAYER_3, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==3){ActDelPlObjEx(PLAYER_4, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==4){ActDelPlObjEx(PLAYER_5, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==5){ActDelPlObjEx(PLAYER_6, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}
EventInput(_PI0==6){ActDelPlObjEx(PLAYER_7, AIREL_MYSELF, AITRG_BOATINTELLIGENCE);actLockEvent();}

/* 
enem_boats = GetPlObjM(PLAYER_CURR, AIREL_ENEMYS, AITRG_BOATALL);
enem_tlo   = GetPlObjM(PLAYER_CURR, AIREL_ENEMYS, AITRG_TLOALL);
enem_gold  = GetPlRes(PLAYER_CURR, AIREL_ENEMYS, TOBJ_GOLD);
enem_cor   = GetPlRes(PLAYER_CURR, AIREL_ENEMYS, TOBJ_CORIUM);
enem_metal = GetPlRes(PLAYER_CURR, AIREL_ENEMYS, TOBJ_METAL, );
*/

 CloseEvents();

CloseArbiter();
