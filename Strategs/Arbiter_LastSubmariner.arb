include<[_inc_path]\AiScript.dfn>;
include<[_inc_path]\AiScript.mcr>;
include<[_inc_path]\Strategs\CONST_LastSubmariner.dfn>;
/*
    _RT100 - начальный индекс чтения из String Table
    _RT101 - тип артефакта M, L, S, XL
    _RT102 - value артефакта
    _RT103 - расса - WS, BO, SI
    _RT104, _RT106 - счетчики генерируемых субмарин
    _RT105 - ИД субмариный
    _RT107 - флаг награды: 1 - ресурсы 2 - субмарина 3 - технология
    _RT108 - кол-во ресурсов награды
    _RT109 - ИД субмарины WS в награде
    _RT110 - ИД субмарины BO в награде
    _RT111 - ИД субмарины SI в награде
    _RT112-127 - x,y первого объекта каждого игрока
    _RT128 - кол-во игроков
    _RT129 - размер карты
*/
OpenArbiter("LastSubmariner100");
    OpenEvents();

        s_win    = 14;
        s_defeat = 15;
        ofst = 20;

        Event(TRUE) 
        {
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, TELESHIELD, 50,50,0);
            _ploop_begin
                if(GetPlCiv(_pl_)==CIV_WS)//--WS--
                {
                    ActCreatePlObj(_plmyself, CONSTRUCTOR, -1, -1, -1, LOGO_UNDEF, "Start object");
                }
                else
                { 
                    if(GetPlCiv(_pl_)==CIV_BO)//--BO--
                    {
                        ActCreatePlObj(_plmyself, ASSEMBLER);
                    }
                }
                if(GetPlCiv(_pl_)==CIV_SI)//--SI--
                {
                    ActCreatePlObj(_plmyself, CAPSULE_PROTOTYPE); 
                    ActCreatePlObj(_plmyself, CAPSULE_PROTOTYPE); 
                    ActCreatePlObj(_plmyself, CAPSULE_PROTOTYPE);
                    ActCreatePlObj(_plmyself, CAPSULE_PROTOTYPE); 
                    ActCreatePlObj(_plmyself, CAPSULE_PROTOTYPE);
                }
            _ploop_end

            if(GetPlCiv( GetCurrPl() ) == CIV_WS)
            {
                ActTechSet(GetCurrPl(), AIREL_MYSELF, _strtoint(GetStrRes(GetRnd(83,90))), 1);
            }
            if(GetPlCiv( GetCurrPl() ) == CIV_BO)
            {
                ActTechSet(GetCurrPl(), AIREL_MYSELF, _strtoint(GetStrRes(GetRnd(91,98))), 1);
            }
            if(GetPlCiv( GetCurrPl() ) == CIV_SI)
            {
                ActTechSet(GetCurrPl(), AIREL_MYSELF, _strtoint(GetStrRes(GetRnd(99,106))), 1);
            }
 
            // Off
            //actOffEvent(10);
            //actOffEvent(20);
            //actOffEvent(30); 
            //actOffEvent(100);
            /*
            ActCreateDest(0, LOGO_0, 27, 87, 0, "name", "text", VEFF_TELEPORT);
            if(IsDestExist("name"))
            {
                actStringMess("Dest with name exist");
            }
            actStringMess("Dest cont = " + _inttostr(GetDest()));
            */
        }
/*
        Event(getOwnTime()>10)
        { 
            actOnEvent(IsTeamGame() ? 20 : 10);
            actOnEvent(30);
            actOnEvent(100);
        }

        Event(getOwnTime()%3==1, 10)
        {
            _ploop_begin
                if(!getVar(100+_pl_) && GetPlObjM(_plmyself, AITRG_ALL)==0)
                { 
                    actSetVar(100+_pl_, ENDMISS_FAILED);
                    ActOnTimer(_plmyself,10);
                    ActOffFOW(_plmyself);                                 
                    _actStringMess(_strf(GetStrRes(s_defeat), GetPlName(_pl_)));
                }
            _ploop_end
            actLockEvent();
        }
  
        Event(getOwnTime()%3==1, 20)
        {
            _ploop_begin
                if(!getVar(100+_pl_) && GetPlObjM(_plunion, AITRG_ALL)==0)
                { 
                    actSetVar(100+_pl_, ENDMISS_FAILED);
                    ActOnTimer(_plmyself,10);
                    ActOffFOW(_plmyself);                                 
                    _actStringMess(_strf(GetStrRes(s_defeat), GetPlName(_pl_)));
                }
            _ploop_end
            actLockEvent();
        }

        Event(getOwnTime()%3==1, 30)
        {
            _ploop_begin
                if(!getVar(100+_pl_) && GetPlObjM(_plnotally, AITRG_ALL)==0)
                {
                    actSetVar(100+_pl_, ENDMISS_ACCOMPL);
                    ActOnTimer(_plmyself,10);
                    ActOffFOW(_plmyself);                                 
                    _actStringMess(_strf(GetStrRes(s_win), GetPlName(_pl_)));
                }
            _ploop_end
            actLockEvent();
        }
  
        Event(TRUE, 100)
        {
            _ploop_begin
                if(getVar(100+_pl_)>0 && GetTimerTime(_pl_)==0)
                {
                    ActOffTimer(_plmyself);
                    ActTotalStatistics(_plmyself, 10);
                    ActEndMiss(_plmyself, getVar(100+_pl_));
                    actSetVar(100+_pl_, -1);
                }
            _ploop_end
            actLockEvent();
        }/**/

        // создание на карте сундуков с кориумом
        //Event(getOwnTime()>5)
        //{
            //if(GetRCCont(PLAYER_0, AIREL_MYSELF, CORIUM) < COUNT_CHEST)
            //{
                ////actStringMess("RC cont = " + _inttostr(GetRCCont(PLAYER_0, AIREL_MYSELF,CORIUM)));
                //ActCreateRCCont(PLAYER_0, AIREL_MYSELF, CORIUM, GetRnd(5,95), GetRnd(5,95), GetRnd(1,3), GetRnd(500,2000), "", VEFF_TELEPORT);
                //actLockEvent();
            //}
        //}


        // генерирует артефакты и субмарины ИИ в определнных координатах из String Table
        Event(TRUE)
        {
            _ploop_begin
                if(IsPlObjExist(_pl_, "Start object", 24, 25, 26, 27))
                {
                    //_actStringMess(_inttostr(_RT24) + " " + _inttostr(_RT25))
                    if(_pl_==PLAYER_0){_RT112:=_RT24; _RT113:=_RT25;}
                    if(_pl_==PLAYER_1){_RT114:=_RT24; _RT115:=_RT25;}
                    if(_pl_==PLAYER_2){_RT116:=_RT24; _RT117:=_RT25;}
                    if(_pl_==PLAYER_3){_RT118:=_RT24; _RT119:=_RT25;}
                    if(_pl_==PLAYER_4){_RT120:=_RT24; _RT121:=_RT25;}
                    if(_pl_==PLAYER_5){_RT122:=_RT24; _RT123:=_RT25;}
                    if(_pl_==PLAYER_6){_RT124:=_RT24; _RT125:=_RT25;}
                    if(_pl_==PLAYER_7){_RT126:=_RT24; _RT127:=_RT25;}
                    _actStringMess(_inttostr(_RT24) + " " + _inttostr(_RT25))
                }
                _RT128 += 4;
            _ploop_end


            _RT129 := GetRes(SILICON, 0, 0, 0, 1, 200, 0) / 80;
            //_actStringMess("Silicon in line / 80 " + _inttostr(GetRes(SILICON, 0, 0, 0, 1, 200, 0) / 80))


            while (_RT128 > 0)
            {
                //_RT132 := 5; offset
                _RT130 := GetRnd(0, _RT129);
                _RT131 := GetRnd(0, _RT129);
                if(
                    (
                        (_RT130 < _RT112 - ofst) || (_RT130 > _RT112 + ofst)    // x
                        || (_RT131 < _RT113 - ofst) || (_RT131 > _RT113 + ofst) // y
                    ) &&
                    (
                        (_RT130 < _RT114 - ofst) || (_RT130 > _RT114 + ofst)    // x
                        || (_RT131 < _RT115 - ofst) || (_RT131 > _RT115 + ofst) // y
                    ) &&(
                        (_RT130 < _RT116 - ofst) || (_RT130 > _RT116 + ofst)    // x
                        || (_RT131 < _RT117 - ofst) || (_RT131 > _RT117 + ofst) // y
                    ) &&(
                        (_RT130 < _RT118 - ofst) || (_RT130 > _RT118 + ofst)    // x
                        || (_RT131 < _RT119 - ofst) || (_RT131 > _RT119 + ofst) // y
                    ) &&(
                        (_RT130 < _RT120 - ofst) || (_RT130 > _RT120 + ofst)    // x
                        || (_RT131 < _RT121 - ofst) || (_RT131 > _RT121 + ofst) // y
                    ) &&(
                        (_RT130 < _RT122 - ofst) || (_RT130 > _RT122 + ofst)    // x
                        || (_RT131 < _RT123 - ofst) || (_RT131 > _RT123 + ofst) // y
                    ) &&(
                        (_RT130 < _RT124 - ofst) || (_RT130 > _RT124 + ofst)    // x
                        || (_RT131 < _RT125 - ofst) || (_RT131 > _RT125 + ofst) // y
                    ) &&(
                        (_RT130 < _RT126 - ofst) || (_RT130 > _RT126 + ofst)    // x
                        || (_RT131 < _RT127 - ofst) || (_RT131 > _RT127 + ofst) // y
                    )
                  )
                {
                    ActCreateArt( TART_X_BOX, GetRnd(1,3), _RT130, _RT131,  GetRnd(0,4),
                                  "", 
                                  "Unknown technology", 
                                  VEFF_NONE);
                    _RT128 -= 1;
                }
            }

            _actStringMess("Artefacts on map: " + _inttostr(GetArt())


//            _RT100:= 27;
//            while(_RT100 <= 82)
//            {
//                // Type Art - L, M, S, XL
//                _RT101:= GetRnd(1,4);
//                // Value Art
//                _RT102:= GetRnd(1,6)*1000;
//                // Count Guard Art
//                _RT104:= 0;
//                // L
//                if(GetArt(TART_X_BOX, "V " + _inttostr(_RT102)) <= 4 && _RT101 == 1)
//                {
//                    ActCreateArt( TART_X_BOX, 
//                                  GetRnd(1,3), 
//                                  _strtoint(GetStrRes(_RT100)), 
//                                  _strtoint(GetStrRes(_RT100+1)), 
//                                  GetRnd(1,3), 
//                                  "V " + _inttostr(_RT102), 
//                                  "Art Val " + _inttostr(_RT102), 
//                                  VEFF_TELEPORT);
//                }
//                // M
//                if(GetArt(TART_X_BOX, "V " + _inttostr(_RT102)) <= 8 && _RT101 == 2)
//                {
//                    ActCreateArt( TART_X_BOX, 
//                                  GetRnd(1,3), 
//                                  _strtoint(GetStrRes(_RT100)), 
//                                  _strtoint(GetStrRes(_RT100+1)), 
//                                  GetRnd(1,3), 
//                                  "V " + _inttostr(_RT102), 
//                                  "Art Val " + _inttostr(_RT102), 
//                                  VEFF_TELEPORT);
//                }
//                // S
//                if(GetArt(TART_X_BOX, "V " + _inttostr(_RT102)) <= 12 && _RT101 == 3)
//                {
//                    ActCreateArt( TART_X_BOX, 
//                                  GetRnd(1,3), 
//                                  _strtoint(GetStrRes(_RT100)), 
//                                  _strtoint(GetStrRes(_RT100+1)), 
//                                  GetRnd(1,3), 
//                                  "V " + _inttostr(_RT102), 
//                                  "Art Val " + _inttostr(_RT102), 
//                                  VEFF_TELEPORT);
//                }
//                // XL
//                if(GetArt(TART_X_BOX, "V " + _inttostr(_RT102)) <= 16 && _RT101 == 4)
//                {
//                    ActCreateArt( TART_X_BOX, 
//                                  GetRnd(1,3), 
//                                  _strtoint(GetStrRes(_RT100)), 
//                                  _strtoint(GetStrRes(_RT100+1)), 
//                                  GetRnd(1,3), 
//                                  "V " + _inttostr(_RT102), 
//                                  "Art Val " + _inttostr(_RT102), 
//                                  VEFF_TELEPORT);
//                }
//
//                // Random CIV
//                _RT103:= GetRnd(1,3);
//
//                // ID Submarine
//                _RT105:= 1;
//                // Count Submarine Guard
//                _RT106:= 1;
//                if(_RT102 == 1000)
//                {
//                    _RT106:= GetRnd(4,5);
//                    if(_RT103 == CIV_WS) {_RT105:= 1;}
//                    if(_RT103 == CIV_BO) {_RT105:= 13;}
//                    if(_RT103 == CIV_SI) {_RT105:= 30;}
//                }
//
//                if(_RT102 == 2000)
//                {
//                    _RT106:= GetRnd(5,6);
//                    if(_RT103 == CIV_WS && _RT102 == 2000) {_RT105:= 2;}
//                    if(_RT103 == CIV_BO && _RT102 == 2000) {_RT105:= 14;}
//                    if(_RT103 == CIV_SI && _RT102 == 2000) {_RT105:= 32;}
//                }
//                if(_RT102 == 3000)
//                {
//                    _RT106:= GetRnd(3,4);
//                    if(_RT103 == CIV_WS && _RT102 == 3000) {_RT105:= 3;}
//                    if(_RT103 == CIV_BO && _RT102 == 3000) {_RT105:= 15;}
//                    if(_RT103 == CIV_SI && _RT102 == 3000) {_RT105:= 31;}
//                }
//                if(_RT102 == 4000)
//                {
//                    _RT106:= GetRnd(4,5);
//                    if(_RT103 == CIV_WS && _RT102 == 4000) {_RT105:= 4;}
//                    if(_RT103 == CIV_BO && _RT102 == 4000) {_RT105:= 22;}
//                    if(_RT103 == CIV_SI && _RT102 == 4000) {_RT105:= 28;}
//                }
//                if(_RT102 == 5000)
//                {
//                    _RT106:= GetRnd(5,6);
//                    if(_RT103 == CIV_WS && _RT102 == 5000) {_RT105:= 10;}
//                    if(_RT103 == CIV_BO && _RT102 == 5000) {_RT105:= 23;}
//                    if(_RT103 == CIV_SI && _RT102 == 5000) {_RT105:= 33;}
//                }
//                if(_RT102 == 6000)
//                {
//                    _RT106:= GetRnd(6,7);
//                    if(_RT103 == CIV_WS && _RT102 == 6000) {_RT105:= 38;}
//                    if(_RT103 == CIV_BO && _RT102 == 6000) {_RT105:= 39;}
//                    if(_RT103 == CIV_SI && _RT102 == 6000) {_RT105:= 40;}
//                }
//
//                while(_RT104 < _RT106)
//                {
//                    ActCreatePlObj(PLAYER_0, AIREL_MYSELF, _RT105, _strtoint(GetStrRes(_RT100)), _strtoint(GetStrRes(_RT100+1)), GetRnd(1,3),LOGO_0);
//                    _RT104+=1;
//                }
//
//                _RT100+=2;
//            }
//        }

        // Охрана центра
        Event(getOwnTime()> 30)
        {
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 48,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 49,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 50,62,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 51,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 52,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, PARALYSIS_PROBE, 53,62,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 48,63,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 49,63,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 50,63,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 51,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 52,62,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, WS_FLAGSHIP, 53,62,1, LOGO_0);

            //

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 48,37,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 49,37,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 50,37,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 51,37,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 52,37,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, AVENGER, 53,37,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 48,36,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 49,36,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 50,36,1, LOGO_0);

            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 51,36,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 52,36,1, LOGO_0);
            ActCreatePlObj(PLAYER_0, AIREL_MYSELF, SI_FLAGSHIP, 53,36,1, LOGO_0);

        }

        EventArtLoaded(TRUE)
        {
            // 1 - get Res, 2 - get submarine
            _RT107:= GetRnd(1,2);
            
            // T1
            if(_PS0 == "V 1000")
            {
                // count resource
                _RT108:= GetRnd(500,900);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(3,10);

                // ID submarine WS
                _RT109:= 1;
                // BO
                _RT110:= 13;
                // SI
                _RT111:= 30;
            }

            if(_PS0 == "V 2000")
            {
                // count resource
                _RT108:= GetRnd(1000,1500);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(3,7);

                // ID submarine WS
                _RT109:= 2;
                // BO
                _RT110:= 14;
                // SI
                _RT111:= 32;
            }

            if(_PS0 == "V 3000")
            {
                // count resource
                _RT108:= GetRnd(1000,1500);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(3,5);

                // ID submarine WS
                _RT109:= 3;
                // BO
                _RT110:= 15;
                // SI
                _RT111:= 31;
            }

            if(_PS0 == "V 4000")
            {
                // 2 - get submarine, 3 - tecnology
                _RT107:= GetRnd(2,3);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(3,5);

                // ID submarine WS
                _RT109:= 4;
                // BO
                _RT110:= 16;
                // SI
                _RT111:= 28;
            }

            if(_PS0 == "V 5000")
            {
                // 2 - get submarine, 3 - tecnology
                _RT107:= GetRnd(2,3);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(2,4);

                // ID submarine WS
                _RT109:= 10;
                // BO
                _RT110:= 23;
                // SI
                _RT111:= 33;
            }

            if(_PS0 == "V 6000")
            {
                // 2 - get submarine, 3 - tecnology
                _RT107:= GetRnd(2,3);
                _RT103:= GetRnd(1,3);
                _RT104:= 0;
                _RT106:= GetRnd(1,2);

                // ID submarine WS
                _RT109:= 38;
                // BO
                _RT110:= 39;
                // SI
                _RT111:= 40;
            }

            if(_PS0 == "ALL_TTECH")
            {
                _RT107:= 0;
                ActTechSetAll(_PI10, AIREL_MYSELF);
            }

            if(_RT107 == 1)
            {
                actStringMess("Few resources have been received " + _inttostr(_RT108));
                if(_PI11 == CIV_SI)
                {
                    ActSetPlRC(_PI10, AIREL_MYSELF, SILICON, 1, _RT108);
                }
                else
                {
                    ActSetPlRC(_PI10, AIREL_MYSELF, METAL, 1, _RT108);
                }
            }
            if(_RT107 == 2)
            {
                // Random CIV
                actStringMess("Few submarine have been received " + _inttostr(_RT106));

                _RT103:= GetRnd(1,3);
                if(_RT103 == CIV_WS)
                {
                    while(_RT104 < _RT106)
                    {
                        ActCreatePlObj(_PI10, AIREL_MYSELF, _RT109, _PI5, _PI6, _PI7, _PI14);
                        _RT104+=1;
                    }
                }
                if(_RT103 == CIV_BO)
                {
                    while(_RT104 < _RT106)
                    {
                        ActCreatePlObj(_PI10, AIREL_MYSELF, _RT110, _PI5, _PI6, _PI7, _PI14);
                        _RT104+=1;
                    }
                }
                if(_RT103 == CIV_SI)
                {
                    while(_RT104 < _RT106)
                    {
                        ActCreatePlObj(_PI10, AIREL_MYSELF, _RT111, _PI5, _PI6, _PI7, _PI14);
                        _RT104+=1;
                    }
                }
            }

            if(_RT107 == 3)
            {
                if(_PI11 == CIV_WS)
                {
                    ActTechSet(_PI10, AIREL_MYSELF, TTECH_WS_TELEPORTATION_TECHNOLOGY);
                }
                if(_PI11 == CIV_BO)
                {
                    ActTechSet(_PI10, AIREL_MYSELF, TTECH_BO_TELEPORTATION_TECHNOLOGY);
                }
                if(_PI11 == CIV_SI)
                {
                    ActTechSet(_PI10, AIREL_MYSELF, TTECH_SI_TELEPORTATION_GATE);
                }
            }

            actLockEvent();
        }

        // Del artefact after Unloaded
        EventArtUnLoaded(TRUE)
        {
            ActSetName("Art Del2", _PI15, _PI16, _PI17);
            ActDelArt(TART_X_BOX, "Art Del2");
            actLockEvent();
        }

    CloseEvents();
CloseArbiter();