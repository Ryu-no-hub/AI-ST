//====================================================================
//      ST AiScript: SI Computer Assistant Level 00
//====================================================================
include<[_inc_path]\AiScript.dfn>;
include<[_inc_path]\AiScript.mcr>;

#if(_env_var1==0)
 _full_name = "SI Silicon Assistant";_short_name = "ASSISTANT 4";
#endif

OpenStrateg(_full_name, CIV_SI, _short_name, 0x00000003);

 // Tactics
 include<[_curr_path]\SI_Silicon_Tactitian.tct>;

 // Events
 OpenEvents();

	BUILDER_NAME = "Builder";
	USED_BUILDER_NAME = "Auto-builder";
	STEP_SIZE = 16;
  	SILICON_MINE_NAME = "SM";

	// Execute Tactician
	Event(getOwnTime()>1) 
	{ 
		// Выбрать только 1 пробку
//		if(IsPlObjExist(PLAYER_ME, BUILDER_NAME, 24, 25, 26, 27))
//		{
//			ActSetName("", _RT24, _RT25, _RT26);
//			ActSetName(USED_BUILDER_NAME, _RT24, _RT25, _RT26);
//			ActObjSelectN(PLAYER_ME, AIREL_MYSELF, USED_BUILDER_NAME, LOGO_UNDEF, _RT24, _RT25, _RT26, _RT24, _RT25, _RT26);
//		}
		actObjSelectT(SILICON_EXTRACTOR);

		actExecTactic("SI Silicon tactitian");

		_RT22 := getFleetNum("SI Silicon mines", "SI Silicon tactitian");
		_RT23 := getFleetNum("SI Builder", "SI Silicon tactitian");
		_RT10 := GetRes(SILICON, 0, 0, 0, 1, 200, 0) / 80;

		actLockFleet(_RT23, LOCKOBJ_INTERF);

		_ploop_begin
		if(GetPlCiv(_pl_) == CIV_SI && (GetTeam(_pl_) == GetTeam(PLAYER_ME)) )
		{
			_RT11 += 1;
		}
		_ploop_end


		_RT12 := _RT10 / 16 + 1;
		_RT13 := (_RT12 * _RT12) / 2 / _RT11;

		_RT21 := getPlObjT(SILICON_EXTRACTOR);
		_RT13 := _RT13 - _RT21;

		_actStringMess("Сторона карты = " + _inttostr(_RT10))
		_actStringMess("Максимум шахт в линии = " + _inttostr(_RT12))
		_actStringMess("Поместится на 1/2 карты = " + _inttostr((_RT12 * _RT12 / 2)))
		_actStringMess("Силикоидов в команде = " + _inttostr(_RT11))
		_actStringMess("Шахт найдено = " + _inttostr(_RT21))
		_actStringMess("Шахт к постройке = " + _inttostr(_RT13))

		if(IsPlObjExist(PLAYER_ME, BUILDER_NAME, 24, 25, 26, 27))
		{
			_RT71 := 1;
			_actStringMess("Builder found");
			ActSetName("", _RT24, _RT25, _RT26);
			ActSetName(USED_BUILDER_NAME, _RT24, _RT25, _RT26);
			ActObjSelectN(PLAYER_ME, AIREL_MYSELF, USED_BUILDER_NAME, LOGO_UNDEF, _RT24, _RT25, _RT26, _RT24, _RT25, _RT26);
			ActAddFleet(PLAYER_ME, AIREL_MYSELF, _RT23);
		}
		else
		{
			_RT71 := 0;
			ActStringMess(PLAYER_ME, AIREL_MYSELF, "Нет свободных строителей для постройки шахты.");
		}


		if(_RT21)
		{
			if(_RT13 > 0 && IsPlObjExist(PLAYER_ME, SILICON_MINE_NAME, 24, 25, 26, 27) && _RT71) 
			{
				_actStringMess("Found SI mine: " + _inttostr(_RT24) + " " + _inttostr(_RT25) + " " + _inttostr(_RT26));
				_RT30 := _RT24;
				_RT31 := _RT25;
				_RT32 := _RT26;
				_RT46 := 1; // break flag

				_RT41 := 1; // indicator of direction (+/-) and steps amount
				_RT42 := 0; // indicator of axis: 0 - x, 1 - y
				while((_RT41 <= _RT12) && _RT46) // кол-во шагов <= макс. шахт в линии
					{
						_RT43 := _RT41;
					  	while(_RT43 && _RT46)
					  	{
					  		if(_RT43 > 0)
					  		{
					  			if(_RT42) {_RT31 += STEP_SIZE;} // step in positive y
					  			else {_RT30 += STEP_SIZE;} // step in positive x
					  			_RT43 -= 1;
					  		}
					  		else // _RT43 < 0
					  		{
					  			if(_RT42) {_RT31 -= STEP_SIZE;} // step in negative y
					  			else {_RT30 -= STEP_SIZE;} // step in negative x
					  			_RT43 += 1;
					  		}

					  		_actStringMess("Next point: " + _inttostr(_RT30) + " " + _inttostr(_RT31));
					  		if(_isin2D(_RT30, _RT31, 0, 0, _RT10 - 1, _RT10 - 1))
					  		{
						  		//--- Check any SI mines in area around (_RT30, _RT31), then build and break out OR continue steps
						  		_RT48 := _RT30 - STEP_SIZE + 2;
						  		_RT49 := _RT30 + STEP_SIZE - 2;
						  		_RT50 := _RT31 - STEP_SIZE + 2;
						  		_RT51 := _RT31 + STEP_SIZE - 2;
						  		if(_RT48 < 0) {_RT48 := 0;}
						  		if(_RT49 >= _RT10) {_RT49 := _RT10 - 2;}

						  		if(_RT50 < 0) {_RT50 := 0;}
						  		if(_RT51 >= _RT10) {_RT51 := _RT10 - 2;}

							  	_actStringMess("Borders: " + _inttostr(_RT48) + " " + _inttostr(_RT49) + " " + _inttostr(_RT50) + " " + _inttostr(_RT51));
							  	_RT45 := 0;
						  		_RT45 := GetPlObjT(PLAYER_ALL, AIREL_MYSELF, SILICON_EXTRACTOR, LOGO_UNDEF,
						  		 		_RT48, _RT50, 0,
						  		 		_RT49, _RT51, 4);
						  		_actStringMess("Inside map, SI mines near: " + _inttostr(_RT45));
						  		if(!_RT45) 
						  		{
						  			_actStringMess("Putting in point in grid: " + _inttostr(_RT30) + " " + _inttostr(_RT31));
						  			actFParPutInStaff(_RT22, SILICON_EXTRACTOR, UNDEFINED, UNDEFINED, 10, _RT30, _RT31, 0); _RT46 := 0; _RT13 -= 1;
									_RT80 := 1;
						  			ActCreateArt( TART_X_BOX, GetRnd(1,3), _RT30, _RT31,  4,
		                                  "", 
		                                  "Unknown technology", 
		                                  VEFF_NONE);
						  		}
					  		}
					  	}
					  	
					  	_RT42 := !_RT42;
					  	if(!_RT42) 
					  	{
					  		_RT41 := -(_RT41 + 1);
					  	}
					}
			}
			else {_actStringMess("Cant find object SM, or _RT13=0: " + _inttostr(_RT13));}
		}
		else
		{
			if(_RT13 > 0 && IsPlObjExist(PLAYER_ME, BUILDER_NAME, 24, 25, 26, 27) && _RT71)
			{
				_actStringMess("No SI mines found, taking builder coords: " + _inttostr(_RT24) + " " + _inttostr(_RT25) + " " + _inttostr(_RT26) + " to search closest grid point");

				_RT30 := _RT10 / _RT24 >= 1 ? _RT10 - 2 : 0;
				_RT31 := _RT10 / _RT25 >= 1 ? _RT10 - 2 : 0;
				_RT32 := 0;

				_RT56 := _RT30;
				_RT57 := _RT31;

				_RT38 := _RT30;
				_RT39 := _RT31;

				_actStringMess("Start spiral point: " + _inttostr(_RT30) + " " + _inttostr(_RT31));	

				_RT36 := 1000;
				_RT37 := 1000;
				_RT46 := 1;

				while(_RT30 < _RT10 && _RT30 >= 0 && _RT46) // x
				{
				  	_RT34 := _RT30 > _RT24 ? _RT30 - _RT24 : _RT24 - _RT30;
				  	if(_RT34 < _RT36) 
				  	{
				  		if(
				  			((_RT38 == 0 && _RT24 < 20) || (_RT38 == _RT56 && (_RT10 - _RT24 < 20)))
				  			)
				  		{
				  			_actStringMess("edge point better - keep last X")
				  			_RT46 := 0;
				  		}
				  		else {_RT36 := _RT34; _RT38 := _RT30;}
				  	}

				  	while(_RT31 < _RT10 && _RT31 >= 0) // y
				  	{
						_RT35 := _RT31 > _RT25 ? _RT31 - _RT25 : _RT25 - _RT31;
						if(_RT35 < _RT37) 
							{
								if(
						  			((_RT39 == 0 && _RT25 < 20) || (_RT39 == _RT57 && (_RT10 - _RT25 < 20)))
						  			)
								{
									_actStringMess("edge point better - keep last Y")
								}
								else {_RT37 := _RT35; _RT39 := _RT31;}
							}

						//_RT31 += STEP_SIZE;
						_RT31 += _RT57 == (_RT10 - 2) ? -STEP_SIZE : STEP_SIZE;
				  	}
				  	//_RT30 += STEP_SIZE;
				  	_RT30 += _RT56 == (_RT10 - 2) ? -STEP_SIZE : STEP_SIZE;
				}
				_actStringMess("Putting in closest point in grid: " + _inttostr(_RT38) + " " + _inttostr(_RT39));
				actFParHomePosition(_RT22, AICAN_BYORDER, _RT38, _RT39, 0, 0, 0, FORMATION_DEFAULT, 0, 0);
				actFParPutInStaff(_RT22, SILICON_EXTRACTOR, UNDEFINED, UNDEFINED, 10, _RT38, _RT39, 0); _RT13 -= 1;
				actLockFleet(_RT23, LOCKOBJ_INTERF);
				_RT80 := 1;
				ActCreateArt( TART_X_BOX, GetRnd(1,3), _RT38, _RT39,  4,
		                                  "", 
		                                  "Unknown technology", 
		                                  VEFF_NONE);
			}
			else {_actStringMess("No builder or mine vacancies fullfilled");}
		}
	};


	//EventPlObjCreated((_PI3 == SILICON_EXTRACTOR) && (_RT13 > 0) && (_PS1 == BUILDER_NAME || _PS1 == USED_BUILDER_NAME))
	EventPlObjCreated((_PI3 == SILICON_EXTRACTOR) && (_RT13 > 0) /*&& _PI10 == PLAYER_ME*/ && _RT80)
	{
		_actStringMess("PLAYER_ME: " + _inttostr(PLAYER_ME));
		_actStringMess("_PI10: " + _inttostr(_PI10));
		_actStringMess("_PI0: " + _inttostr(_PI0));
	    ActSetName(SILICON_MINE_NAME, _PI5, _PI6, _PI7);
	    _actStringMess("SI mine finished at: " + _inttostr(_PI5) + " " + _inttostr(_PI6) + " " + _inttostr(_PI7) + ", searching optimal place for next");	


		if(IsPlObjExist(_PI10, BUILDER_NAME, 24, 25, 26, 27))
		{
			_RT71 := 1;
			_actStringMess("Builder found at: " + _inttostr(_RT24) + " " + _inttostr(_RT25) + " " + _inttostr(_RT26));
			ActSetName("", _RT24, _RT25, _RT26);
			ActSetName(USED_BUILDER_NAME, _RT24, _RT25, _RT26);
			ActObjSelectN(_PI10, AIREL_MYSELF, USED_BUILDER_NAME, LOGO_UNDEF, _RT24, _RT25, _RT26, _RT24, _RT25, _RT26);
			ActAddFleet(_PI10, AIREL_MYSELF, _RT23);
		}
		else
		{
			_RT71 := 0;
			ActStringMess(_PI10, AIREL_MYSELF, "Нет свободных подлодок-строителей для постройки шахты.");
		}

		_RT40 := 0;
	    if(IsPlObjExist(_PI10, SILICON_MINE_NAME, 52, 53, 54, 55)  && _RT71)
			{
				_RT30 := _RT52;
				_RT31 := _RT53;
				_RT32 := _RT54;
				_RT46 := 1; // break flag
				_actStringMess("Start spiral point: " + _inttostr(_RT30) + " " + _inttostr(_RT31) + " " + _inttostr(_RT32) + ", searching optimal place for next");	

				_RT41 := 1; // indicator of direction (+/-) and steps amount
				_RT42 := 0; // indicator of axis: 0 - x, 1 - y
				while((_RT41 <= _RT12) && _RT46) // кол-во шагов <= макс. шахт в линии
					{
						_RT43 := _RT41; // current indicator of direction (+/-) and steps amount
					  	while(_RT43 && _RT46)
					  	{
					  		if(_RT43 > 0)
					  		{
					  			if(_RT42) {_RT31 += STEP_SIZE; _actStringMess("y + step: " + _inttostr(_RT31));} // step in positive y
					  			else {_RT30 += STEP_SIZE; _actStringMess("x + step: " + _inttostr(_RT30));} // step in positive x
					  			_RT43 -= 1;
					  		}
					  		else // _RT43 < 0
					  		{
					  			if(_RT42) {_RT31 -= STEP_SIZE; _actStringMess("y - step: " + _inttostr(_RT31));} // step in negative y
					  			else {_RT30 -= STEP_SIZE; _actStringMess("x - step: " + _inttostr(_RT30));} // step in negative x
					  			_RT43 += 1;
					  		}
					  		_RT40 += 1;

						  	_actStringMess("Next point: " + _inttostr(_RT30) + " " + _inttostr(_RT31));
					  		if(_isin2D(_RT30, _RT31, 0, 0, _RT10 - 1, _RT10 - 1))
					  		{
						  		//--- Check any SI mines in area around (_RT30, _RT31), then build and break out OR continue steps
						  		_RT48 := _RT30 - STEP_SIZE + 2;
						  		_RT49 := _RT30 + STEP_SIZE - 2;
						  		_RT50 := _RT31 - STEP_SIZE + 2;
						  		_RT51 := _RT31 + STEP_SIZE - 2;

						  		_RT48 := _RT48 < 0 ? 0 : _RT48 >= _RT10 ? _RT10 - 2 : _RT48;
						  		_RT49 := _RT49 < 0 ? 0 : _RT49 >= _RT10 ? _RT10 - 2 : _RT49;

						  		_RT50 := _RT50 < 0 ? 0 : _RT50 >= _RT10 ? _RT10 - 2 : _RT50;
						  		_RT51 := _RT51 < 0 ? 0 : _RT51 >= _RT10 ? _RT10 - 2 : _RT51;

							  	_actStringMess("Borders: " + _inttostr(_RT48) + " " + _inttostr(_RT49) + " " + _inttostr(_RT50) + " " + _inttostr(_RT51));
							  	_RT45 := 0;
						  		_RT45 := GetPlObjT(PLAYER_ALL, AIREL_MYSELF, SILICON_EXTRACTOR, LOGO_UNDEF,
						  		 		_RT48, _RT50, 0,
						  		 		_RT49, _RT51, 4);
							  	_actStringMess("Inside map, SI mines near: " + _inttostr(_RT45));
						  		if(!_RT45) 
						  		{
						  			_actStringMess("Putting in point in grid: " + _inttostr(_RT30) + " " + _inttostr(_RT31));
						  			_actStringMess("Steps made: " + _inttostr(_RT40));
						  			_actStringMess("Mines left to place: " + _inttostr(_RT13-1));
									actFParHomePosition(_RT22, AICAN_BYORDER, _RT30, _RT31, 0, 0, 0, FORMATION_DEFAULT, 0, 0);
						  			actFParPutInStaff(_RT22, SILICON_EXTRACTOR, UNDEFINED, UNDEFINED, 10, _RT30, _RT31, 0); _RT46 := 0; _RT13 -= 1;
						  			actLockFleet(_RT23, LOCKOBJ_INTERF);
						  			_RT80 := 1;
						  			ActCreateArt( TART_X_BOX, GetRnd(1,3), _RT30, _RT31,  4,
		                                  "", 
		                                  "Unknown technology", 
		                                  VEFF_NONE);
						  		}
					  		}
					  	}
					  	_RT42 := !_RT42;
					  	if(!_RT42) 
					  	{
					  		_RT41 := _RT41 < 0 ? -(_RT41 - 1) : -(_RT41 + 1);
					  		_actStringMess("_RT41: " + _inttostr(_RT41));
					  	}
					}
					_actStringMess("Name object: " + _PS0 + ", name builder: " + _PS1 + ", fleet number: " + _inttostr(_PI18));
					if(_RT41 > _RT12) {_actStringMess("Нет свободного места для постройки шахты кремния");}
			}
			else {_actStringMess("Cant find object SM");}
	    actLockEvent();
	}

	EventPlObjKilled(_PI3 == CAPSULE_PROTOTYPE)
	{
		_actStringMess("Name: " + _PS0 + ", name2: " + _PS1 + ", fleet number: " + _inttostr(_PI18));
		if(_PS0 == USED_BUILDER_NAME)
		{
			ActStringMess(_PI10, AIREL_MYSELF, "Строитель уничтожен. Конец работы.");
		}
	}

	CloseEvents();

CloseStrateg();
